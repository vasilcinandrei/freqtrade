{"version":3,"file":"InfoBox.vue_vue_type_script_setup_true_lang-85060789.js","sources":["../../src/components/general/DateTimeTZ.vue","../../src/components/general/ProfitSymbol.vue","../../src/components/general/ProfitPill.vue","../../src/components/ftbot/TradeProfit.vue"],"sourcesContent":["<template>\n  <span :title=\"timezoneTooltip\">{{ formattedDate }}</span>\n</template>\n\n<script setup lang=\"ts\">\nimport { timestampms, timestampmsWithTimezone, timestampToDateString } from '@/shared/formatters';\n\nimport { computed } from 'vue';\n\nconst props = defineProps({\n  date: { required: true, type: Number },\n  showTimezone: { required: false, type: Boolean, default: false },\n  dateOnly: { required: false, type: Boolean, default: false },\n});\nconst formattedDate = computed((): string => {\n  if (props.dateOnly) {\n    return timestampToDateString(props.date);\n  }\n  if (props.showTimezone) {\n    return timestampmsWithTimezone(props.date);\n  }\n  return timestampms(props.date);\n});\n\nconst timezoneTooltip = computed((): string => {\n  const time1 = timestampmsWithTimezone(props.date);\n  const timeUTC = timestampmsWithTimezone(props.date, 'UTC');\n  if (time1 === timeUTC) {\n    return timeUTC;\n  }\n\n  return `${time1}\\n${timeUTC}`;\n});\n</script>\n\n<style scoped></style>\n","<template>\n  <div class=\"d-inline-block\">\n    <div :class=\"isProfitable ? 'triangle-up' : 'triangle-down'\"></div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue';\n\nconst props = defineProps({\n  profit: { type: Number, required: true },\n});\nconst isProfitable = computed(() => {\n  return props.profit > 0;\n});\n</script>\n\n<style scoped lang=\"scss\">\n.triangle-up {\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 0 0.45rem 0.7rem 0.45rem;\n  border-color: transparent transparent $color-profit transparent;\n}\n.triangle-down {\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 0.7rem 0.45rem 0 0.45rem;\n  border-color: $color-loss transparent transparent transparent;\n}\n</style>\n","<template>\n  <div\n    class=\"d-flex justify-content-between align-items-center profit-pill ps-2 pe-1\"\n    :class=\"isProfitable ? 'profit-pill-profit' : ''\"\n    :title=\"profitDesc\"\n  >\n    <profit-symbol :profit=\"(profitRatio || profitAbs) ?? 0\" />\n\n    <div class=\"d-flex justify-content-center align-items-center flex-grow-1\">\n      {{ profitRatio !== undefined ? formatPercent(profitRatio, 2) : '' }}\n      <span\n        v-if=\"profitString\"\n        class=\"ms-1\"\n        :class=\"profitRatio ? 'small' : ''\"\n        :title=\"stakeCurrency\"\n        >{{ profitString }}</span\n      >\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { formatPercent, formatPrice, formatPriceCurrency } from '@/shared/formatters';\n\nimport ProfitSymbol from '@/components/general/ProfitSymbol.vue';\n\nimport { computed } from 'vue';\n\nconst props = defineProps({\n  profitRatio: { required: false, default: undefined, type: Number },\n  profitAbs: { required: false, default: undefined, type: Number },\n  stakeCurrency: { required: true, type: String },\n  profitDesc: { required: false, default: '', type: String },\n});\nconst isProfitable = computed(() => {\n  return (\n    (props.profitRatio !== undefined && props.profitRatio > 0) ||\n    (props.profitRatio === undefined && props.profitAbs !== undefined && props.profitAbs > 0)\n  );\n});\n\nconst profitString = computed((): string => {\n  if (props.profitRatio !== undefined && props.profitAbs !== undefined) {\n    return `(${formatPrice(props.profitAbs, 3)})`;\n  } else if (props.profitAbs !== undefined) {\n    if (props.stakeCurrency !== undefined) {\n      return `${formatPriceCurrency(props.profitAbs, props.stakeCurrency, 3)}`;\n    } else {\n      return `${formatPrice(props.profitAbs, 3)}`;\n    }\n  }\n  return '';\n});\n</script>\n\n<style scoped lang=\"scss\">\n.profit-pill {\n  border: 2px solid $color-loss;\n  border-radius: 6px;\n}\n.profit-pill-profit {\n  border: 2px solid $color-profit;\n}\n</style>\n","<template>\n  <profit-pill\n    :profit-ratio=\"profitRatio\"\n    :profit-abs=\"profitAbs\"\n    :profit-desc=\"profitDesc\"\n    :stake-currency=\"trade.quote_currency || 'USDT'\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport { formatPercent, timestampms } from '@/shared/formatters';\nimport { Trade } from '@/types';\nimport ProfitPill from '@/components/general/ProfitPill.vue';\n\nimport { computed, PropType } from 'vue';\n\ntype modes = 'default' | 'total' | 'realized';\n\nconst props = defineProps({\n  trade: { required: true, type: Object as () => Trade },\n  mode: {\n    required: false,\n    default: 'default',\n    type: String as PropType<modes>,\n  },\n});\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst modeDescs: { [key in modes]: string } = {\n  default: 'Current profit',\n  total: 'Total profit',\n  realized: 'Realized profit',\n};\n\nconst profitRatio = computed<number | undefined>(() => {\n  switch (props.mode) {\n    case 'default':\n      return props.trade.profit_ratio;\n    case 'total':\n      return props.trade.total_profit_ratio;\n    case 'realized':\n      return props.trade.realized_profit_ratio;\n    default:\n      return undefined;\n  }\n});\nconst profitAbs = computed<number | undefined>(() => {\n  switch (props.mode) {\n    case 'default':\n      return props.trade.profit_abs;\n    case 'total':\n      return props.trade.total_profit_abs;\n    case 'realized':\n      return props.trade.realized_profit;\n    default:\n      return undefined;\n  }\n});\nconst profitDesc = computed((): string => {\n  let profit = `${modeDescs[props.mode]}: ${\n    profitRatio.value ? formatPercent(profitRatio.value) : ''\n  } (${profitAbs.value})`;\n  profit += `\\nOpen since: ${timestampms(props.trade.open_timestamp)}`;\n  return profit;\n});\n</script>\n\n<style scoped></style>\n"],"names":["formattedDate","computed","props","timestampToDateString","timestampmsWithTimezone","timestampms","timezoneTooltip","time1","timeUTC","isProfitable","profitString","formatPrice","formatPriceCurrency","modeDescs","profitRatio","profitAbs","profitDesc","profit","formatPercent"],"mappings":"0WAcAA,EAAAC,EAAA,IACEC,EAAA,SACEC,EAAAD,EAAA,IAAA,EAEFA,EAAA,aACEE,EAAAF,EAAA,IAAA,EAEFG,EAAAH,EAAA,IAAA,CAA6B,EAG/BI,EAAAL,EAAA,IAAA,CACE,MAAAM,EAAAH,EAAAF,EAAA,IAAA,EACAM,EAAAJ,EAAAF,EAAA,KAAA,KAAA,EACA,OAAAK,IAAAC,EACEA,EAGF,GAAAD,CAAA;AAAA,EAAeC,CAAA,EAAY,CAAA,mLCnB7BC,EAAAR,EAAA,IACEC,EAAA,OAAA,CAAsB,0eCqBxBO,EAAAR,EAAA,IACEC,EAAA,cAAA,QAAAA,EAAA,YAAA,GAAAA,EAAA,cAAA,QAAAA,EAAA,YAAA,QAAAA,EAAA,UAAA,CAEyF,EAI3FQ,EAAAT,EAAA,IACEC,EAAA,cAAA,QAAAA,EAAA,YAAA,OACE,IAAAS,EAAAT,EAAA,UAAA,CAAA,CAAA,IAA0CA,EAAA,YAAA,OAE1CA,EAAA,gBAAA,OACE,GAAAU,EAAAV,EAAA,UAAAA,EAAA,cAAA,CAAA,CAAA,GAEA,GAAAS,EAAAT,EAAA,UAAA,CAAA,CAAA,GAGJ,EAAO,0mBCvBTW,EAAA,CAA8C,QAAA,iBACnC,MAAA,eACF,SAAA,iBACG,EAGZC,EAAAb,EAAA,IAAA,CACE,OAAAC,EAAA,KAAA,CAAoB,IAAA,UAEhB,OAAAA,EAAA,MAAA,aAAmB,IAAA,QAEnB,OAAAA,EAAA,MAAA,mBAAmB,IAAA,WAEnB,OAAAA,EAAA,MAAA,sBAAmB,QAEnB,MAAO,CACX,CAAA,EAEFa,EAAAd,EAAA,IAAA,CACE,OAAAC,EAAA,KAAA,CAAoB,IAAA,UAEhB,OAAAA,EAAA,MAAA,WAAmB,IAAA,QAEnB,OAAAA,EAAA,MAAA,iBAAmB,IAAA,WAEnB,OAAAA,EAAA,MAAA,gBAAmB,QAEnB,MAAO,CACX,CAAA,EAEFc,EAAAf,EAAA,IAAA,CACE,IAAAgB,EAAA,GAAAJ,EAAAX,EAAA,IAAA,CAAA,KAAAY,EAAA,MAAAI,EAAAJ,EAAA,KAAA,EAAA,EAAA,KAAAC,EAAA,KAAA,IAGA,OAAAE,GAAA;AAAA,cAAUZ,EAAAH,EAAA,MAAA,cAAA,CAAA,GACVe,CAAO,CAAA"}